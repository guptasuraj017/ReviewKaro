@model ReviewKaro.Employee

@{
    ViewBag.Title = "Add Employee";

}

@section Menu{

    @Html.ActionLink("Home", "Index", "Employees")


    @Html.ActionLink("Review", "Index", "Review")


}

@section Name{
    <a href="#default">
        @ViewBag.Name
    </a>
}




<div class="pageSubTitle"><h4 class="title">@ViewBag.Title</h4></div>
<div class="containerforform">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })





            <div class="form-row">


                <div class="form-group col-md-4">
                    @Html.Label("First Name")

                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })

                </div>

                <div class="form-group col-md-4">
                    @Html.Label("Last Name")

                    @Html.EditorFor(model => model.Last_Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Last_Name, "", new { @class = "text-danger" })

                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.DOB)

                    @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control datepicker" } })
                    @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })

                </div>
            </div>

            <div class="form-row">
                <div class="form-group col-md-4">
                    @Html.Label("Gender")

                    @Html.DropDownList("GenderId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.GenderId, "", new { @class = "text-danger" })

                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.Designation)

                    @Html.EditorFor(model => model.Designation, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Designation, "", new { @class = "text-danger" })

                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.DOJ)

                    @Html.EditorFor(model => model.DOJ, new { htmlAttributes = new { @class = "form-control datepicker" } })
                    @Html.ValidationMessageFor(model => model.DOJ, "", new { @class = "text-danger" })

                </div>
            </div>

            <div class="form-row">
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.Department)

                    @Html.EditorFor(model => model.Department, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Department, "", new { @class = "text-danger" })

                </div>

                <div class="form-group col-md-6">
                    @Html.Label("Employee Type")

                    @Html.DropDownList("EmployeeTypeId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.EmployeeTypeId, "", new { @class = "text-danger" })

                </div>
            </div>

            <div class="form-row">
                <div class="form-group col-md-4">
                    @Html.Label("Country")

                    @Html.DropDownList("CountryId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CountryId, "", new { @class = "text-danger" })

                </div>

                <div class="form-group col-md-4">
                    @Html.Label("State")

                    @Html.DropDownList("StateId", new SelectList(""),"" , new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.StateId, "", new { @class = "text-danger" })

                </div>

                <div class="form-group col-md-4">
                    @Html.Label("City")

                    @Html.DropDownList("CityId", new SelectList(""), "", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CityId, "", new { @class = "text-danger" })

                </div>
            </div>



            <div class="form-row">
                <div class="form-group col-md-6">
                    @Html.Label("Phone Number")

                    @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })

                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.Email)

                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })

                </div>
            </div>

            <div class="form-row">
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.Username)

                    @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })

                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.Password)

                    @Html.PasswordFor(model => model.Password, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })

                </div>

            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.Status)
                        @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            @*<div>
                    @Html.TextBox("Date",null,new {@id="dateInput" })
                </div>*@

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    @Html.ActionLink("Back", "Index", null, new { @class = "backButton btn btn-secondary" })
                    <input type="submit" value="Create" class="btn btn-info" />

                </div>
            </div>
        </div>
    }


</div>





<script>
    $(document).ready(function () {
        $("#CountryId").change(function () {
            var countryid = $(this).val();
           

            $.ajax('/Home/GetStateList?id=' + countryid,
                {
                    dataType: 'html', // type of response data

                    success: function (response) {

                        $('#StateId').empty();
                        $('#StateId').append(response);
                    }
                });
        });
    });
</script>
<script>
    $(document).ready(function () {
        $("#StateId").change(function () {
            var stateid = $(this).val();


            $.ajax('/Home/GetCityList?id=' + stateid,
                {
                    dataType: 'html', // type of response data

                    success: function (response) {
                        // success callback function
                        $('#CityId').empty();
                        $('#CityId').append(response);
                    }
                });
        });
    });
</script>


@section script{

    <script src="~/Script/jquery-ui.js"></script>
    <script>
        $(function () {
            $(".datepicker").datepicker({
                dateFormat: "yy/mm/dd",
                showOn: "button",
                buttonImage: "http://jqueryui.com/resources/demos/datepicker/images/calendar.gif",
                buttonImageOnly: true,
                changeMonth: true,
                changeYear: true,
                minDate: new Date(1990, 1, 1),
                maxDate: new Date(2025, 1, 1)
            });
        });
    </script>
}
<script>
    $(document).ready(function () {
        $("#Status").prop("checked", true)

    });
</script>